package Project;

import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class Database extends javax.swing.JFrame {

    public Statement st;
    public ResultSet rs;
    Connection Konektor = Koneksi.KonektorDB.BukaKoneksi();

    public Database() {
        initComponents();
        TampilData();
        bHapus.setEnabled(false);
        bBatal.setEnabled(false);

    }

    private void openKasirForm() {
        // Membuat objek instance dari form Database
        Cashier Kasir = new Cashier();
        // Menampilkan form Database
        Kasir.setVisible(true);
    }

    private void TampilData() {
        try {
            st = Konektor.createStatement();
            rs = st.executeQuery("SELECT * FROM db_produk");

            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("ID");
            model.addColumn("Nama");
            model.addColumn("Kode");
            model.addColumn("Harga");
            model.addColumn("Stok");

            model.getDataVector().removeAllElements();
            model.setRowCount(0);

            while (rs.next()) {
                Object[] data = {
                    rs.getString("ID"),
                    rs.getString("Nama"),
                    rs.getString("Kode"),
                    rs.getString("Harga"),
                    rs.getString("Stok")
                };
                model.addRow(data);
                tabelDatabase.setModel(model);
            }

        } catch (Exception e) {
        }
    }

    private void Clear() {
        txtNama.setText("");
        txtKode.setText("");
        txtStok.setText("");
        txtHarga.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelDatabase = new javax.swing.JTable();
        labelNamaBarang = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        labelKode = new javax.swing.JLabel();
        txtKode = new javax.swing.JTextField();
        labelStok = new javax.swing.JLabel();
        txtStok = new javax.swing.JTextField();
        labelHarga = new javax.swing.JLabel();
        txtHarga = new javax.swing.JTextField();
        bBatal = new javax.swing.JButton();
        bHapus = new javax.swing.JButton();
        txtID = new javax.swing.JTextField();
        bSimpan = new javax.swing.JButton();
        bKasir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabelDatabase.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        tabelDatabase.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Kode", "Nama", "Harga", "Stok"
            }
        ));
        tabelDatabase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelDatabaseMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelDatabase);
        if (tabelDatabase.getColumnModel().getColumnCount() > 0) {
            tabelDatabase.getColumnModel().getColumn(0).setResizable(false);
            tabelDatabase.getColumnModel().getColumn(1).setResizable(false);
            tabelDatabase.getColumnModel().getColumn(2).setResizable(false);
            tabelDatabase.getColumnModel().getColumn(3).setResizable(false);
            tabelDatabase.getColumnModel().getColumn(4).setResizable(false);
            tabelDatabase.getColumnModel().getColumn(4).setPreferredWidth(1);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 900, 370));

        labelNamaBarang.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        labelNamaBarang.setText("Nama Produk");
        jPanel1.add(labelNamaBarang, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 430, -1, -1));

        txtNama.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jPanel1.add(txtNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 430, 170, 27));

        labelKode.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        labelKode.setText("Kode Produk");
        jPanel1.add(labelKode, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 470, -1, -1));

        txtKode.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jPanel1.add(txtKode, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 470, 170, 27));

        labelStok.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        labelStok.setText("Stok Produk");
        jPanel1.add(labelStok, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 510, -1, -1));

        txtStok.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jPanel1.add(txtStok, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 510, 170, 27));

        labelHarga.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        labelHarga.setText("Harga Produk");
        jPanel1.add(labelHarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 430, -1, -1));

        txtHarga.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jPanel1.add(txtHarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 430, 230, 27));

        bBatal.setBackground(new java.awt.Color(255, 255, 255));
        bBatal.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        bBatal.setText("Batal");
        bBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBatalActionPerformed(evt);
            }
        });
        jPanel1.add(bBatal, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 470, 100, -1));

        bHapus.setBackground(new java.awt.Color(255, 255, 255));
        bHapus.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        bHapus.setText("Hapus");
        bHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHapusActionPerformed(evt);
            }
        });
        jPanel1.add(bHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 506, 350, -1));
        jPanel1.add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 370, 60, -1));

        bSimpan.setBackground(new java.awt.Color(255, 255, 255));
        bSimpan.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        bSimpan.setText("Simpan");
        bSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSimpanActionPerformed(evt);
            }
        });
        jPanel1.add(bSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 470, 180, -1));

        bKasir.setBackground(new java.awt.Color(255, 255, 255));
        bKasir.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        bKasir.setText("Kasir");
        bKasir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bKasirActionPerformed(evt);
            }
        });
        jPanel1.add(bKasir, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 470, 160, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, 580));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSimpanActionPerformed
        // TODO add your handling code here:

        try {

            st = Konektor.createStatement();

            if (txtNama.getText().equals("") || txtKode.getText().equals("") || txtStok.getText().equals("") || txtHarga.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Data tidak boleh Kosong!", "Validasi Data", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                if (bSimpan.getText() == "Simpan") {
                    // Cek Jika produk sudah ada dalam Database
                    String checkQuery = "SELECT COUNT(*) FROM db_produk WHERE Nama = ? OR Kode = ?";
                    PreparedStatement checkStatement = Konektor.prepareStatement(checkQuery);
                    checkStatement.setString(1, txtNama.getText());
                    checkStatement.setString(2, txtKode.getText());
                    ResultSet checkResultSet = checkStatement.executeQuery();
                    checkResultSet.next();
                    int count = checkResultSet.getInt(1);

                    if (count > 0) {
                        JOptionPane.showMessageDialog(null, "Produk dengan nama atau kode tersebut sudah ada!", "Validasi Data", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    String sql = "INSERT INTO db_produk (Kode, Nama, Stok, Harga) VALUES (?, ?, ?, ?)";

                    try (PreparedStatement statement = Konektor.prepareStatement(sql)) {
                        statement.setString(1, txtKode.getText());
                        statement.setString(2, txtNama.getText());
                        statement.setString(3, txtStok.getText());
                        statement.setString(4, txtHarga.getText());

                        statement.executeUpdate();
                        Clear();
                        tabelDatabase.clearSelection();
                        TampilData();
                    }
                } else {
                    try {

                        String cekUpdate = "SELECT COUNT(*) FROM db_produk WHERE Nama = ? AND Kode = ? AND Stok = ? AND Harga = ?";

                        try (PreparedStatement cekStatement = Konektor.prepareStatement(cekUpdate)) {

                            cekStatement.setString(1, txtNama.getText());
                            cekStatement.setString(2, txtKode.getText());
                            cekStatement.setString(3, txtStok.getText());
                            cekStatement.setString(4, txtHarga.getText());

                            ResultSet cekResult = cekStatement.executeQuery();
                            cekResult.next();
                            int count = cekResult.getInt(1);

                            if (count > 0) {
                                JOptionPane.showMessageDialog(null, "Data masih sama!", "", JOptionPane.ERROR_MESSAGE);
                                return;
                            }
                        }

                        if (txtNama.getText().equals("") || txtKode.getText().equals("") || txtStok.getText().equals("")) {
                            JOptionPane.showMessageDialog(null, "Input tidak boleh kosong!", "Validasi Input", JOptionPane.ERROR_MESSAGE);
                            return;
                        } else {
                            String update = "UPDATE db_produk SET Nama = ?, Stok = ?, Harga = ?, Kode = ? WHERE ID = ?";

                            try (PreparedStatement statement = Konektor.prepareStatement(update)) {

                                statement.setString(1, txtNama.getText());
                                statement.setString(2, txtStok.getText());
                                statement.setString(3, txtHarga.getText());
                                statement.setString(4, txtKode.getText());
                                statement.setString(5, txtID.getText());

                                statement.executeUpdate();
                                Clear();
                                JOptionPane.showMessageDialog(null, "Data berhasil diperbarui!");
                                TampilData();
                            }
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }
    }//GEN-LAST:event_bSimpanActionPerformed

    private void tabelDatabaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelDatabaseMouseClicked
        // TODO add your handling code here:
        txtNama.setText(tabelDatabase.getValueAt(tabelDatabase.getSelectedRow(), 1).toString());
        txtKode.setText(tabelDatabase.getValueAt(tabelDatabase.getSelectedRow(), 2).toString());
        txtStok.setText(tabelDatabase.getValueAt(tabelDatabase.getSelectedRow(), 4).toString());
        txtHarga.setText(tabelDatabase.getValueAt(tabelDatabase.getSelectedRow(), 3).toString());
        txtID.setText(tabelDatabase.getValueAt(tabelDatabase.getSelectedRow(), 0).toString());

        bHapus.setEnabled(true);
        bBatal.setEnabled(true);
        bSimpan.setText("Perbarui");
    }//GEN-LAST:event_tabelDatabaseMouseClicked

    private void bHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHapusActionPerformed
        // TODO add your handling code here:
        int Jawab = JOptionPane.showConfirmDialog(null, "Data ini akan dihapus, lanjutkan?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (Jawab == 0) { //0 == Yes, 1 ==No
            try {
                st = Konektor.createStatement();

                String hapus = "DELETE FROM db_produk WHERE ID = '" + txtID.getText() + "'";
                st.executeUpdate(hapus);
                JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus!");
                tabelDatabase.repaint();
                bHapus.setEnabled(false);
                tabelDatabase.clearSelection();
                Clear();
                TampilData();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_bHapusActionPerformed

    private void bBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBatalActionPerformed
        // TODO add your handling code here:
        tabelDatabase.clearSelection();
        bBatal.setEnabled(false);
        bHapus.setEnabled(false);
        bSimpan.setText("Simpan");
        Clear();
        TampilData();
    }//GEN-LAST:event_bBatalActionPerformed

    private void bKasirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bKasirActionPerformed
        // TODO add your handling code here:
        openKasirForm();
        this.setVisible(false);
    }//GEN-LAST:event_bKasirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Database.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Database.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Database.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Database.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Database().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBatal;
    private javax.swing.JButton bHapus;
    private javax.swing.JButton bKasir;
    private javax.swing.JButton bSimpan;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelHarga;
    private javax.swing.JLabel labelKode;
    private javax.swing.JLabel labelNamaBarang;
    private javax.swing.JLabel labelStok;
    private javax.swing.JTable tabelDatabase;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtKode;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtStok;
    // End of variables declaration//GEN-END:variables
}
